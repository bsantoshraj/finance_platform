  const fetchDebts = useCallback(async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await axios.get('http://localhost:5000/api/debts', {
        headers: { Authorization: `Bearer ${token}` },
      });
      setDebts(response.data);
    } catch (err) {
      const errorMessage = err.response?.data?.error || 'Error fetching debts';
      setError(errorMessage);
      toast.error(errorMessage);
    } finally {
      setLoading(false);
    }
  }, [token, setLoading, setError]);

  const handleDelete = async (id) => {
    setLoading(true);
    setError(null);
    try {
      await axios.delete(`http://localhost:5000/api/debts/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setDebts(debts.filter((debt) => debt.id !== id));
      toast.success('Debt deleted successfully!');
    } catch (err) {
      const errorMessage = err.response?.data?.error || 'Error deleting debt';
      setError(errorMessage);
      toast.error(errorMessage);
    } finally {
      setLoading(false);
    }
  };
